// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trajectory.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "trajectory.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace sim_msg {

namespace {

const ::google::protobuf::Descriptor* Traj_Point_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Traj_Point_reflection_ = NULL;
const ::google::protobuf::Descriptor* trajectory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  trajectory_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_trajectory_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_trajectory_2eproto() {
  protobuf_AddDesc_trajectory_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "trajectory.proto");
  GOOGLE_CHECK(file != NULL);
  Traj_Point_descriptor_ = file->message_type(0);
  static const int Traj_Point_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Traj_Point, t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Traj_Point, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Traj_Point, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Traj_Point, v_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Traj_Point, s_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Traj_Point, a_),
  };
  Traj_Point_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Traj_Point_descriptor_,
      Traj_Point::default_instance_,
      Traj_Point_offsets_,
      -1,
      -1,
      -1,
      sizeof(Traj_Point),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Traj_Point, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Traj_Point, _is_default_instance_));
  trajectory_descriptor_ = file->message_type(1);
  static const int trajectory_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(trajectory, points_),
  };
  trajectory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      trajectory_descriptor_,
      trajectory::default_instance_,
      trajectory_offsets_,
      -1,
      -1,
      -1,
      sizeof(trajectory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(trajectory, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(trajectory, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_trajectory_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Traj_Point_descriptor_, &Traj_Point::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      trajectory_descriptor_, &trajectory::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_trajectory_2eproto() {
  delete Traj_Point::default_instance_;
  delete Traj_Point_reflection_;
  delete trajectory::default_instance_;
  delete trajectory_reflection_;
}

void protobuf_AddDesc_trajectory_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_trajectory_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020trajectory.proto\022\007sim_msg\"N\n\nTraj_Poin"
    "t\022\t\n\001t\030\001 \001(\001\022\t\n\001x\030\002 \001(\001\022\t\n\001y\030\003 \001(\001\022\t\n\001v\030"
    "\004 \001(\001\022\t\n\001s\030\005 \001(\001\022\t\n\001a\030\006 \001(\001\"1\n\ntrajector"
    "y\022#\n\006points\030\001 \003(\0132\023.sim_msg.Traj_Pointb\006"
    "proto3", 166);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "trajectory.proto", &protobuf_RegisterTypes);
  Traj_Point::default_instance_ = new Traj_Point();
  trajectory::default_instance_ = new trajectory();
  Traj_Point::default_instance_->InitAsDefaultInstance();
  trajectory::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_trajectory_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_trajectory_2eproto {
  StaticDescriptorInitializer_trajectory_2eproto() {
    protobuf_AddDesc_trajectory_2eproto();
  }
} static_descriptor_initializer_trajectory_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Traj_Point::kTFieldNumber;
const int Traj_Point::kXFieldNumber;
const int Traj_Point::kYFieldNumber;
const int Traj_Point::kVFieldNumber;
const int Traj_Point::kSFieldNumber;
const int Traj_Point::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Traj_Point::Traj_Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sim_msg.Traj_Point)
}

void Traj_Point::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Traj_Point::Traj_Point(const Traj_Point& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sim_msg.Traj_Point)
}

void Traj_Point::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  t_ = 0;
  x_ = 0;
  y_ = 0;
  v_ = 0;
  s_ = 0;
  a_ = 0;
}

Traj_Point::~Traj_Point() {
  // @@protoc_insertion_point(destructor:sim_msg.Traj_Point)
  SharedDtor();
}

void Traj_Point::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Traj_Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Traj_Point::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Traj_Point_descriptor_;
}

const Traj_Point& Traj_Point::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_trajectory_2eproto();
  return *default_instance_;
}

Traj_Point* Traj_Point::default_instance_ = NULL;

Traj_Point* Traj_Point::New(::google::protobuf::Arena* arena) const {
  Traj_Point* n = new Traj_Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Traj_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:sim_msg.Traj_Point)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Traj_Point, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Traj_Point*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(t_, a_);

#undef ZR_HELPER_
#undef ZR_

}

bool Traj_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sim_msg.Traj_Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double t = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_x;
        break;
      }

      // optional double x = 2;
      case 2: {
        if (tag == 17) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_y;
        break;
      }

      // optional double y = 3;
      case 3: {
        if (tag == 25) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_v;
        break;
      }

      // optional double v = 4;
      case 4: {
        if (tag == 33) {
         parse_v:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &v_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_s;
        break;
      }

      // optional double s = 5;
      case 5: {
        if (tag == 41) {
         parse_s:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_a;
        break;
      }

      // optional double a = 6;
      case 6: {
        if (tag == 49) {
         parse_a:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sim_msg.Traj_Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sim_msg.Traj_Point)
  return false;
#undef DO_
}

void Traj_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sim_msg.Traj_Point)
  // optional double t = 1;
  if (this->t() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->t(), output);
  }

  // optional double x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->x(), output);
  }

  // optional double y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->y(), output);
  }

  // optional double v = 4;
  if (this->v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->v(), output);
  }

  // optional double s = 5;
  if (this->s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->s(), output);
  }

  // optional double a = 6;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->a(), output);
  }

  // @@protoc_insertion_point(serialize_end:sim_msg.Traj_Point)
}

::google::protobuf::uint8* Traj_Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sim_msg.Traj_Point)
  // optional double t = 1;
  if (this->t() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->t(), target);
  }

  // optional double x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->x(), target);
  }

  // optional double y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->y(), target);
  }

  // optional double v = 4;
  if (this->v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->v(), target);
  }

  // optional double s = 5;
  if (this->s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->s(), target);
  }

  // optional double a = 6;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->a(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:sim_msg.Traj_Point)
  return target;
}

int Traj_Point::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:sim_msg.Traj_Point)
  int total_size = 0;

  // optional double t = 1;
  if (this->t() != 0) {
    total_size += 1 + 8;
  }

  // optional double x = 2;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // optional double y = 3;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // optional double v = 4;
  if (this->v() != 0) {
    total_size += 1 + 8;
  }

  // optional double s = 5;
  if (this->s() != 0) {
    total_size += 1 + 8;
  }

  // optional double a = 6;
  if (this->a() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Traj_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sim_msg.Traj_Point)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Traj_Point* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Traj_Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sim_msg.Traj_Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sim_msg.Traj_Point)
    MergeFrom(*source);
  }
}

void Traj_Point::MergeFrom(const Traj_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sim_msg.Traj_Point)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.t() != 0) {
    set_t(from.t());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.v() != 0) {
    set_v(from.v());
  }
  if (from.s() != 0) {
    set_s(from.s());
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
}

void Traj_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sim_msg.Traj_Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Traj_Point::CopyFrom(const Traj_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sim_msg.Traj_Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Traj_Point::IsInitialized() const {

  return true;
}

void Traj_Point::Swap(Traj_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Traj_Point::InternalSwap(Traj_Point* other) {
  std::swap(t_, other->t_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(v_, other->v_);
  std::swap(s_, other->s_);
  std::swap(a_, other->a_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Traj_Point::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Traj_Point_descriptor_;
  metadata.reflection = Traj_Point_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Traj_Point

// optional double t = 1;
void Traj_Point::clear_t() {
  t_ = 0;
}
 double Traj_Point::t() const {
  // @@protoc_insertion_point(field_get:sim_msg.Traj_Point.t)
  return t_;
}
 void Traj_Point::set_t(double value) {
  
  t_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Traj_Point.t)
}

// optional double x = 2;
void Traj_Point::clear_x() {
  x_ = 0;
}
 double Traj_Point::x() const {
  // @@protoc_insertion_point(field_get:sim_msg.Traj_Point.x)
  return x_;
}
 void Traj_Point::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Traj_Point.x)
}

// optional double y = 3;
void Traj_Point::clear_y() {
  y_ = 0;
}
 double Traj_Point::y() const {
  // @@protoc_insertion_point(field_get:sim_msg.Traj_Point.y)
  return y_;
}
 void Traj_Point::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Traj_Point.y)
}

// optional double v = 4;
void Traj_Point::clear_v() {
  v_ = 0;
}
 double Traj_Point::v() const {
  // @@protoc_insertion_point(field_get:sim_msg.Traj_Point.v)
  return v_;
}
 void Traj_Point::set_v(double value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Traj_Point.v)
}

// optional double s = 5;
void Traj_Point::clear_s() {
  s_ = 0;
}
 double Traj_Point::s() const {
  // @@protoc_insertion_point(field_get:sim_msg.Traj_Point.s)
  return s_;
}
 void Traj_Point::set_s(double value) {
  
  s_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Traj_Point.s)
}

// optional double a = 6;
void Traj_Point::clear_a() {
  a_ = 0;
}
 double Traj_Point::a() const {
  // @@protoc_insertion_point(field_get:sim_msg.Traj_Point.a)
  return a_;
}
 void Traj_Point::set_a(double value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Traj_Point.a)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int trajectory::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

trajectory::trajectory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sim_msg.trajectory)
}

void trajectory::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

trajectory::trajectory(const trajectory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sim_msg.trajectory)
}

void trajectory::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

trajectory::~trajectory() {
  // @@protoc_insertion_point(destructor:sim_msg.trajectory)
  SharedDtor();
}

void trajectory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void trajectory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* trajectory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return trajectory_descriptor_;
}

const trajectory& trajectory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_trajectory_2eproto();
  return *default_instance_;
}

trajectory* trajectory::default_instance_ = NULL;

trajectory* trajectory::New(::google::protobuf::Arena* arena) const {
  trajectory* n = new trajectory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void trajectory::Clear() {
// @@protoc_insertion_point(message_clear_start:sim_msg.trajectory)
  points_.Clear();
}

bool trajectory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sim_msg.trajectory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sim_msg.Traj_Point points = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_points:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_points;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sim_msg.trajectory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sim_msg.trajectory)
  return false;
#undef DO_
}

void trajectory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sim_msg.trajectory)
  // repeated .sim_msg.Traj_Point points = 1;
  for (unsigned int i = 0, n = this->points_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(i), output);
  }

  // @@protoc_insertion_point(serialize_end:sim_msg.trajectory)
}

::google::protobuf::uint8* trajectory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sim_msg.trajectory)
  // repeated .sim_msg.Traj_Point points = 1;
  for (unsigned int i = 0, n = this->points_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->points(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:sim_msg.trajectory)
  return target;
}

int trajectory::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:sim_msg.trajectory)
  int total_size = 0;

  // repeated .sim_msg.Traj_Point points = 1;
  total_size += 1 * this->points_size();
  for (int i = 0; i < this->points_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->points(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void trajectory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sim_msg.trajectory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const trajectory* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const trajectory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sim_msg.trajectory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sim_msg.trajectory)
    MergeFrom(*source);
  }
}

void trajectory::MergeFrom(const trajectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sim_msg.trajectory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  points_.MergeFrom(from.points_);
}

void trajectory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sim_msg.trajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void trajectory::CopyFrom(const trajectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sim_msg.trajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool trajectory::IsInitialized() const {

  return true;
}

void trajectory::Swap(trajectory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void trajectory::InternalSwap(trajectory* other) {
  points_.UnsafeArenaSwap(&other->points_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata trajectory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = trajectory_descriptor_;
  metadata.reflection = trajectory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// trajectory

// repeated .sim_msg.Traj_Point points = 1;
int trajectory::points_size() const {
  return points_.size();
}
void trajectory::clear_points() {
  points_.Clear();
}
const ::sim_msg::Traj_Point& trajectory::points(int index) const {
  // @@protoc_insertion_point(field_get:sim_msg.trajectory.points)
  return points_.Get(index);
}
::sim_msg::Traj_Point* trajectory::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:sim_msg.trajectory.points)
  return points_.Mutable(index);
}
::sim_msg::Traj_Point* trajectory::add_points() {
  // @@protoc_insertion_point(field_add:sim_msg.trajectory.points)
  return points_.Add();
}
::google::protobuf::RepeatedPtrField< ::sim_msg::Traj_Point >*
trajectory::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:sim_msg.trajectory.points)
  return &points_;
}
const ::google::protobuf::RepeatedPtrField< ::sim_msg::Traj_Point >&
trajectory::points() const {
  // @@protoc_insertion_point(field_list:sim_msg.trajectory.points)
  return points_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sim_msg

// @@protoc_insertion_point(global_scope)
